[gd_scene load_steps=4 format=2]

[sub_resource type="GDScript" id=4]
script/source = "extends Spatial

var selected = false

func _on_Area_input_event(camera, event, position, normal, shape_idx):
	print('entered')
	if event.button_index == BUTTON_LEFT and event.pressed == true:
		print('entered')


func _on_Area_mouse_entered():
	print(\"Mouse Exited\")
	var new_material = load(\"res://Materials/test_ball_green.tres\")
	$MeshInstance.material_override = new_material


func _on_Area_mouse_exited():
	print(\"Mouse Entered\")
	var new_material = load(\"res://Materials/test_ball_white.tres\")
	$MeshInstance.material_override = new_material



func _on_Area_ready():
	#var child = self.get_node(\"MeshInstance/Area\").get_signal_connection_list(\"mouse_entered\") 
	#print(child[0])
	pass

var white_mat = load(\"res://Materials/test_ball_white.tres\")
var green_mat = load(\"res://Materials/test_ball_green.tres\")
func _on_StaticBody_input_event(camera, event, position, normal, shape_idx):
	var mouse_click = event as InputEventMouseButton
	if mouse_click and mouse_click.button_index == 1 and mouse_click.pressed:
		if selected:
			print('1')
			$MeshInstance.material_override = white_mat
			selected = false
		else:
			print('2')
			$MeshInstance.material_override = green_mat
			selected = true
"

[sub_resource type="SphereMesh" id=1]
radius = 0.1
height = 0.2
rings = 64

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 1, 1, 1, 0.427451 )
refraction_enabled = true
refraction_scale = 1.0
refraction_texture_channel = 0

[node name="White Piece" type="Spatial"]
script = SubResource( 4 )

[node name="StaticBody" type="StaticBody" parent="."]

[node name="MeshInstance" type="MeshInstance" parent="StaticBody"]
transform = Transform( 1.1, 0, 0, 0, 1.1, 0, 0, 0, 1.1, 0, 0, 0 )
use_in_baked_light = true
mesh = SubResource( 1 )
skeleton = NodePath("../..")
material/0 = SubResource( 2 )

[connection signal="input_event" from="StaticBody" to="." method="_on_StaticBody_input_event"]
